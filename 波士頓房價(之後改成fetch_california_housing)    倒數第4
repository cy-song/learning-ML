

#from sklearn import datasets
#from sklearn.model_selection import cross_val_predict
#from sklearn import linear_model
# TODO
from sklearn.datasets import load_boston
boston = load_boston()
print(dir(boston))
df = pd.DataFrame(boston.data.T, ['CRIM','ZN','INDUS','CHAS','NOX','RM' ,'AGE','DIS','RAD','TAX', 'PTRATIO','B','LSTAT']) #有13個feature
# TODO

df['MEDV'] = boston.target                              ################################
# MEDV即預測目標向量
# TODO
X = df[['CRIM','ZN','INDUS','CHAS','NOX','RM' ,'AGE','DIS','RAD','TAX', 'PTRATIO','B','LSTAT']]
y = df['MEDV']

#分出20%的資料作為test set
# TODO
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X,y,test_size = 0.2,random_state = 1)


#Fit linear model 配適線性模型
from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)
y_pre = model.predict(x_test)

# TODO
from sklearn.metrics import mean_squared_error, mean_absolute_error ######## 
MAE = mean_absolute_error(y_test,y_pre)
MSE = mean_squared_error(y_test,y_pre)
RMSE = mean_squared_error(y_test,y_pre)**0.5

print('MAE:',  MAE            )
print('MSE:'  MSE            )
print('RMSE:' RMSE            )

#  ([[0.00632, 18.00, 2.310, 0, 0.5380, 6.5750, 65.20, 4.0900, 1, 296.0, 15.30, 396.90 , 4.98]])
lm = model
X_new = [[0.00632, 18.00, 2.310, 0, 0.5380, 6.5750, 65.20, 4.0900, 1, 296.0, 15.30, 396.90 , 4.98]]
prediction = lm.predict(X_new)
print("預測房價" ,round(prediction,4)    )
