import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.feature_selection import f_regression      #####################
from sklearn.preprocessing import LabelEncoder

NBApoints_data= pd.read_csv("NBApoints.csv")
#TODO
df = NBApoints_data.copy()  

label_encoder_conver = LabelEncoder()# preprocessing.LabelEncoder()
Pos_encoder_value = label_encoder_conver.fit_transform(df['Pos'])
print(Pos_encoder_value)
print("\n")

#label_encoder_conver = preprocessing.LabelEncoder()
Tm_encoder_value =  label_encoder_conver.fit_transform(df['Tm'])
print(Tm_encoder_value)

train_X = pd.DataFrame({
   'Pos_encoded':  Pos_encoder_value,
   'Tm_encoder_value':Tm_encoder_value,
   'Age':  df['Age']
} ).T
                        
NBApoints_linear_model = LinearRegression()
NBApoints_linear_model.fit(train_X, NBApoints_data["3P"])

NBApoints_linear_model_predict_result= NBApoints_linear_model.predict(train_X)    ###########careful###predict#
print("三分球得球數=", round(NBApoints_linear_model_predict_result[0],4))

 # 預測新的輸入資料 [5, 28, 10]
inp = pd.DataFrame([[5,28,10]]) ###########careful##### 這裡需要將輸入資料變成二維陣列
inp_pre = NBApoints_linear_model.predict(inp)                     ################### 使用 predict 方法
print("R_squared值=", round(r_squared, 4))

r_squared =  NBApoints_linear_model.score(train_X,NBApoints_data["3P"])             ###################careful######
print("R_squared值=",r_squared)       

# f_regression 檢定變數顯著性
f_stat, pvalue = f_regression(train_X, NBApoints_data["3P"])
print("f_regresstion\n")
print("P值=", pvalue             )    ###逗號記得
print("\n")
